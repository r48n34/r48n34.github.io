<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, shrink-to-fit=no"
        />

        <!-- Bootstrap CSS -->
        <link
            rel="stylesheet"
            href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
            integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
            crossorigin="anonymous"
        />
        <link
            type="text/css"
            rel="stylesheet"
            href="//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css"
        />

        <style>
            .container.ccw {
                max-width: 1310px;
            }

            h1 {
                font-size: 3vh;
                color: #ffffff;
            }

            h2 {
                font-size: 2.3vh;
                color: #ffffff;
            }
        </style>

        <title>Play songs RNG</title>
    </head>

    <body style="background-color:#181818 ;">
        <div class="container ccw" style="text-align: center;">
            <div id="appMusic" style="padding-top: 20px;">
                <h1 class="badge" style="font-size: 4vw; color:white;">
                    Random Songs Ha
                </h1>
                <h2 v-html="lastUpdate"></h2>
                <button
                    style="font-size: 30px;"
                    type="button"
                    class="btn btn-light btn-lg"
                    v-on:click="goRandom"
                >
                    Go!
                </button>
                <br /><br />

                <button
                    v-b-toggle.collapse-2
                    type="button"
                    class="btn btn-light btn-lg"
                >
                    History
                </button>

                <button
                    type="button"
                    class="btn btn-light btn-lg"
                    v-on:click="clearLocal">
                    Clear History
                </button>

                <b-collapse id="collapse-2" v-html="historyRecord" />

                <!-- <h1>{{ messageTop }}</h1> -->
                <h2 v-html="currentVdo"></h2>
                <div class="row">
                    <video-box
                        v-for="i in currentList"
                        v-bind:item="i[0]"
                        v-bind:imgg="i[1]"
                    />
                </div>
            </div>
        </div>

        <div class="footer fixed-bottom">
            <nav class="navbar navbar-expand-sm navbar-light">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a
                            href="https://r48n34.github.io/"
                            style="color: white;"
                            target="_blank"
                            style="font-size: 80%;">Reemo Studio</a
                        >
                    </li>
                </ul>
            </nav>
        </div>

        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script
            is:inline
            src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
            integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
            crossorigin="anonymous"
        ></script>
        <script
            is:inline
            src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
            integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
            crossorigin="anonymous"
        ></script>
        <script
            is:inline
            src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"
            integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
            crossorigin="anonymous"
        ></script>

        <script is:inline src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script>
        <script
            is:inline
            src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js"
        ></script>
        <script
            is:inline
            src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue-icons.min.js"
        ></script>

        <script is:inline>
            // Video of the random list
            class WebLink {
                // class method to implementing

                constructor(name, url) {
                    this.webName = name;
                    this.webUrl = url;
                }
            }

            var request = new XMLHttpRequest();
            request.open("GET", "/songWebText.txt", false); // if file is a raw txt with line
            request.send();

            let videoList = request.responseText.split("\n"); //Array list of the video list
            let classList = [];

            for (let i = 0; i < videoList.length; i += 2) {
                classList.push(new WebLink(videoList[i], videoList[i + 1]));
            }

            videoList = new Array();

            let historyArray = []; //local info
            let t = JSON.parse(localStorage.getItem("record"));

            const time = request
                .getResponseHeader("Last-Modified")
                .slice(4, 25); //last mod time of txt

            function youTubeGetID(url) {
                url = url.split(/(vi\/|v%3D|v=|\/v\/|youtu\.be\/|\/embed\/)/);
                return undefined !== url[2]
                    ? url[2].split(/[^0-9a-z_\-]/i)[0]
                    : url[0];
            }

            async function goRandom() {
                while(true){
                    let num = Math.floor(Math.random() * classList.length);
                    let code = youTubeGetID(classList[num].webUrl);
                    let result = await appHa.validVideoId(code, classList[num]);
                    console.log(result)
                    if(result){
                        console.log("Hello")
                        break;
                    }
                }
            }

            Vue.component("video-box", {
                props: ["item", "imgg"],
                template: `
     <div class="col-3 mt-4">
        <div class="card">
             <div class="card-body">              
                 <h5 class="card-title" v-html="item.webName.link(item.webUrl)"></h5>
                 <hr>
                 <div v-html="imgg" ><div>               
             </div>
        </div>
     </div>
     `,
            });

            var appHa = new Vue({
                el: "#appMusic",
                data: {
                    messageTop: "Played Video:",
                    currentVdo: "",
                    currentList: [],
                    historyRecord: "",
                },
                methods: {
                    openVdo: function (li) {
                        let yourImg =
                            "https://img.youtube.com/vi/" +
                            youTubeGetID(li.webUrl) +
                            "/0.jpg";

                        window.open(li.webUrl, "_blank"); //Play video in a new windows
                        this.currentList.push([
                            li,
                            `<img src="${yourImg}" width="230" height="auto">`,
                        ]);

                        this.messageTop =
                            "Played Video : (" + this.currentList.length + ")";
                        this.currentVdo = li.webName.link(li.webUrl);

                        historyArray.push(li);
                        localStorage.setItem(
                            "record",
                            JSON.stringify(historyArray)
                        );

                        let temp = `<h2>Name: ${li.webName}</h2> <h2>URL: ${li.webUrl}</h2> </br>`;
                        this.historyRecord += temp;
                    },

                    validVideoId: function (id, li) {
                        return new Promise( (rec, rej) => {

                            var img = new Image();
                            img.src =
                                "http://img.youtube.com/vi/" +
                                id +
                                "/mqdefault.jpg";

                            img.onload = function () {
                                if(this.width === 120){
                                    appHa.currentVdoChange(li);
                                    rec(false);
                                }
                                else{
                                    appHa.openVdo(li);
                                    rec(true)
                                }
                            };

                        })
                    },

                    currentVdoChange: function (li) {
                        this.currentVdo =
                            li.webName.link(li.webUrl) +
                            "[May invalid]" +
                            "<br/>";
                    },

                    historyRecordSet: function () {
                        let temp = ``;

                        if (t != null) {
                            historyArray = [...t];
                            for (i of Object.keys(historyArray)) {
                                temp += `<h2>Name: ${historyArray[i].webName}</h2> <h2>URL: ${historyArray[i].webUrl}</h2> </br>`;
                            }
                        }

                        this.historyRecord = temp;
                    },

                    clearLocal: function () {
                        try {
                            localStorage.removeItem("record");
                            this.currentVdo = "History Clear!";
                            this.historyRecord = "";
                            location.reload();
                        } catch (e) {
                            alert("Clear fail.");
                        }
                    },
                },
                beforeMount() {
                    this.historyRecordSet();
                },
                computed: {
                    lastUpdate: function () {
                        return (
                            "last update: " +
                            time +
                            "<br> Total Video = " +
                            parseInt(classList.length, 10)
                        );
                    },
                },
            });

            document.addEventListener("keyup", function (event) {
                if (event.keyCode === 13) {
                    goRandom();
                }
            });
        </script>
    </body>
</html>
